debugger;
var jsonresetval; //3rd march
var jsondueDatedateresetval;
$(document).ready(async() => {

    /*if((sessionStorage.getItem("data") == null)){
    	sessionStorage.removeItem("dashboardSelection");
		sessionStorage.removeItem("dashboardType");
        await listAllDocsRequired();
    }*/

	if ($(".documentListingResult").length) {
		$(".econsultBreadcrumb .breadcrumb li").not(":nth-child(1)").remove();
		var dashboardType = decrypt(decodeURIComponent(sessionStorage.getItem("dashboardType")));
        var dashboardSelection = decrypt(decodeURIComponent(sessionStorage.getItem("dashboardSelection")));
        $(".econsultBreadcrumb .breadcrumb").append("<li class='active'><a href='/content/mca/global/en/additional-services/econsultation/econsultation-listing-page.html'>" + dashboardType + " - " + dashboardSelection + "</a></li>");
		$(".headerText").text(dashboardSelection);
		var json = JSON.parse(decrypt(decodeURIComponent(sessionStorage.getItem("data"))));
		docsListing(json);
		jsonresetval = json.data[0].postedOn; //3rd march
		jsondueDatedateresetval = json.data[0].dueDate;
	}

	if ($(".searchResult").length) {
		$(".headerText").text(sessionStorage.getItem("searchSelection"));
		$(".searchbar #searchbox").val(sessionStorage.getItem("searchSelection"));
		var json = JSON.parse(decrypt(decodeURIComponent(sessionStorage.getItem("searchData"))));
		if (json.message == "Data fetched Successfully") {
			docsListing(json);
			jsonresetval = json.data[0].postedOn; //3rd march
			jsondueDatedateresetval = json.data[0].dueDate;
		} else
			$("h5.text-danger").removeClass("noneClass");

	}

	$(".sortPost").on("click", function (e) {
		e.preventDefault();
		if ($(this).parents(".documentListingResult").length) {
			var json = JSON.parse(decrypt(decodeURIComponent(sessionStorage.getItem("data"))));
			sortPostFunction(json);
		} else if ($(this).parents(".searchResult").length) {
			var json = JSON.parse(decrypt(decodeURIComponent(sessionStorage.getItem("searchData"))));
			sortPostFunction(json);
		}

	});

	$(".sortDue").on("click", function (e) {
		e.preventDefault();
		if ($(this).parents(".documentListingResult").length) {
			var json = JSON.parse(decrypt(decodeURIComponent(sessionStorage.getItem("data"))));
			sortDueFunction(json);
		} else if ($(this).parents(".searchResult").length) {
			var json = JSON.parse(decrypt(decodeURIComponent(sessionStorage.getItem("searchData"))));
			sortDueFunction(json);
		}

	});

	$(".clearFilter").on("click", function () {

		if ($(this).parents(".documentListingResult").length) {
			var json = JSON.parse(decrypt(decodeURIComponent(sessionStorage.getItem("data"))));
			clearCheckFunction(json);
		} else if ($(this).parents(".searchResult").length) {
			var json = JSON.parse(decrypt(decodeURIComponent(sessionStorage.getItem("searchData"))));
			clearCheckFunction(json);
		}
	});

	$(".filtercheck").on("change", function () {

		if ($(this).parents(".documentListingResult").length) {
			var json = JSON.parse(decrypt(decodeURIComponent(sessionStorage.getItem("data"))));
			filterFunction(this, json);
		} else if ($(this).parents(".searchResult").length) {
			var json = JSON.parse(decrypt(decodeURIComponent(sessionStorage.getItem("searchData"))));
			filterFunction(this, json);
		}
	});

	$(".e-refineSearch input[type='radio']").on("change", function () {
		$(".e-refineSearch button").prop("disabled", false);
	});

	$(".docsButton").on("click", function () {
		window.location.href = "/content/mca/in/en/econsultation.html";

	});


});

/*
const listAllDocsRequired = async () => {
    var headparam = "recent-rest";
    var requestData = "reqData=" + headparam;

   await $.ajax({
      url: "/bin/listingDocs",
      type: "POST",
      data: requestData
    })

      .done(function(rslt) {
        var jsonData = JSON.parse(rslt);
        if (jsonData.resCode == "200") {
          sessionStorage.data = JSON.stringify(jsonData);
          //Setting session values
          sessionStorage.setItem("dashboardSelection","Earlier");
          sessionStorage.setItem("dashboardType","Posted Recently");
        } else {
		  sessionStorage.setItem("e-consultErrorFlag","listAllDocsRequired");
          window.location.href = "/content/mca/global/en/error-page.html";
        }
      })
      .always(function() {});
}
*/

/*Filter show and hide*/

function changeViewFunction() {

	$('#listcontent').removeClass().addClass('col-sm-9');

	$("#filter-data-close").css("display", "inline");

	$("#filter-data").css("display", "none");

	$("#filtercontent").css("display", "flex");

	//$("#filtercontentmobile").css("display", "inline");
}

function closeFunction() {

	$('#listcontent').removeClass().addClass('col-sm-12');

	$("#filter-data-close").css("display", "none");

	$("#filter-data").css("display", "inline");

	$("#filtercontent").css("display", "none");

	//$("#filtercontentmobile").css("display", "none");
}


/*clear the check boxes*/

function clearCheckFunction(json) {

	var inputs = document.querySelectorAll('.filtercheck');
	for (var i = 0; i < inputs.length; i++) {
		inputs[i].checked = false;
	}
	docsListing(json);
	$("h5.text-danger").addClass("noneClass");

}

/* Dynamic listing docs markup */

function createDocsList(docsData) {

	var docsTemplate = [
		'<div class="card">' +
		'<div class="card-body">' +
		'<div><p>' + docsData.draftCategory + '</p></div>' +
		'<div class="row mr-0 ml-0">' +
		'<div class="col-6 col-sm-9 pl-0 pr-0"><p class="docName">' + docsData.draftName + '</p></div>' +
		'<div class="col-6 col-sm-3 pl-0 pr-0">' +
		'<button id="comment-btn" class="commentbtn docsButtonClick right-align">Comment</button>' +
		'</div>' +
		'</div>' +
		'<div class="row mr-0 ml-0 pt-2">' +
		'<div class="col-12 col-sm-6 pl-0 pr-0">' +
		'<p class="inline-align pr-2 mb-0">' + docsData.actName + '</p>' +
		'<span>|</span>' +
		'<p class="inline-align pl-2 pr-2 mb-0">Posted on : ' + docsData.postedOn + '</p>' +
		'<span>|</span>' +
		'<p class="inline-align pl-2 mb-0 bold-text draftId">' + docsData.draftId + '</p>' +
		'</div>' +
		'<div class="offset-1 col-sm-5 pl-0 pr-0">' +
		'<p class="right-align mb-0 d-none d-sm-block">Comments Due on : ' + docsData.dueDate + '</p></div>' +
		'</div>' +
		'<div class="d-sm-none pt-2"><p class=" ">Comments Due on: ' + docsData.dueDate + '</p></div>' +
		' <input type="hidden" id="' + docsData.draftId + '" name="redirectionLink" value="' + docsData.draftId + '">' +
		'</div>' +
		'</div>'
	];

	return $(docsTemplate.join(''));
}

/* Creating listing docs data based on ajax json values */

function docsListing(json) {
	var docs = $();
	$("#listcontent .card").remove();
	var dataArray = json.data;

	var postedDate;
	var dueDateformat;

	month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

	for (var i = 0; i < dataArray.length; i++) {

		var datepostedformat = new Date(dataArray[i].postedOn); // getting the date

		var datedueformat = new Date(dataArray[i].dueDate); // getting the date

		var d = datepostedformat.getDate();
		var m = datepostedformat.getMonth();
		var y = datepostedformat.getFullYear();

		var d1 = datedueformat.getDate();
		var m1 = datedueformat.getMonth();
		var y1 = datedueformat.getFullYear();

		postedDate = (d <= 9 ? '0' + d : d) + '-' + (month[m]) + '-' + y;
		dataArray[i].postedOn = postedDate;

		dueDateformat = (d1 <= 9 ? '0' + d1 : d1) + '-' + (month[m1]) + '-' + y1;
		dataArray[i].dueDate = dueDateformat;

		docs = docs.add(createDocsList(dataArray[i]));
		$("#listcontent:visible .heightalign").append(docs);
	}


	/*for (var i = 0; i < dataArray.length; i++) {
var posteddateCounter=0;
        for(var j=0;j<=12;j++){
    if((dataArray[i].postedOn.substring(0,2)==String('0'+j)|| dataArray[i].postedOn.substring(0,2)==String(j)) && posteddateCounter<=0){
       postedDate = dataArray[i].postedOn.substring(3,5)+'-'+month[j-1]+'-'+dataArray[i].postedOn.substring(6,10);
        dataArray[i].postedOn=postedDate;
        posteddateCounter++;
    }
    }
 var duedateCounter =0;
      for(var k=0;k<=12;k++){
    if((dataArray[i].dueDate.substring(0,2)==String('0'+k)|| dataArray[i].dueDate.substring(0,2)==String(k)) && duedateCounter<=0){
       dueDateformat = dataArray[i].dueDate.substring(3,5)+'-'+month[k-1]+'-'+dataArray[i].dueDate.substring(6,10);
        dataArray[i].dueDate=dueDateformat;
        duedateCounter++;
    }
	}
       docs = docs.add(createDocsList(dataArray[i]));
        $("#listcontent:visible .heightalign").append(docs);
	}*/
}

/* Creating listing docs data based on ajax json values */

function filterListing(result) {
	var dataArray = result;

	var postedDate;
	var dueDateformat;

	month = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];

	for (var i = 0; i < dataArray.length; i++) {

		var datepostedformat = new Date(dataArray[i].postedOn); // getting the date

		var datedueformat = new Date(dataArray[i].dueDate); // getting the date

		var d = datepostedformat.getDate();
		var m = datepostedformat.getMonth();
		var y = datepostedformat.getFullYear();

		var d1 = datedueformat.getDate();
		var m1 = datedueformat.getMonth();
		var y1 = datedueformat.getFullYear();

		postedDate = (d <= 9 ? '0' + d : d) + '-' + (month[m]) + '-' + y;
		dataArray[i].postedOn = postedDate;

		dueDateformat = (d1 <= 9 ? '0' + d1 : d1) + '-' + (month[m1]) + '-' + y1;
		dataArray[i].dueDate = dueDateformat;
	}
}


/* Sorting based on Posted Date */

function sortPostFunction(json) {

	var datesposted = [];

	var jsonresetvalOnload = json.data[0].postedOn; //3rd march

	for (var k = 0; k < json.data.length; k++) {
		datesposted.push(new Date(json.data[k].postedOn));
	}

	var minjsonDate = new Date(Math.min.apply(null, datesposted)).getTime();
	var maxjsonDate = new Date(Math.max.apply(null, datesposted)).getTime();

	function SortByDateAsc(x, y) { //Asecending--small to large --16 feb to 3rd mar
		return new Date(y.postedOn).getTime() - new Date(x.postedOn).getTime();
	};

	function SortByDateDec(x, y) { // Descending--large to small -- 3rd mar to 16th feb
		return new Date(x.postedOn).getTime() - new Date(y.postedOn).getTime();
	};

	if (new Date(jsonresetval).getTime() == minjsonDate) { //3rd march---16 feb--initally
		json.data.sort(SortByDateAsc);
		jsonresetval = jsonresetvalOnload;
	} else {

		json.data.sort(SortByDateDec);
		jsonresetval = json.data[0].postedOn; //16 feb


	}
	docsListing(json);
};

/* Sorting based on Comment Due Date */

function sortDueFunction(json) {

	var dueDatesjson = [];

	var jsonresetvalOnload = json.data[0].dueDate;

	for (var k = 0; k < json.data.length; k++) {
		dueDatesjson.push(new Date(json.data[k].dueDate));
	}

	var minjsonDate = new Date(Math.min.apply(null, dueDatesjson)).getTime();
	var maxjsonDate = new Date(Math.max.apply(null, dueDatesjson)).getTime();

	var maxresetvalue = new Date(Math.max.apply(null, dueDatesjson));

	function SortBydueDateAsc(x, y) { //Asecending--small to large
		return new Date(y.dueDate).getTime() - new Date(x.dueDate).getTime();
	};

	function SortBydueDateDec(x, y) { // Descending--large to small
		return new Date(x.dueDate).getTime() - new Date(y.dueDate).getTime();
	};

	if (new Date(jsondueDatedateresetval).getTime() == minjsonDate) { //17th mar---17th mar--same..max value to be reassigned to jsonduedate

		json.data.sort(SortBydueDateAsc);
		jsondueDatedateresetval = maxresetvalue;
	} else {

		json.data.sort(SortBydueDateDec);
		jsondueDatedateresetval = json.data[0].dueDate;

	}
	docsListing(json);
};

/*Filter logic*/

function filterFunction(item, json) {

	var actArray = []
	var actCheckBoxes = document.querySelectorAll('input[name=actfiltercheck]:checked')

	for (var i = 0; i < actCheckBoxes.length; i++) {
		actArray.push(actCheckBoxes[i].value);
	}

	var postedArray = []

	var postedDateArray = []

	var postedCheckBoxes = document.querySelectorAll('input[name=postedfiltercheck]:checked')

	for (var i = 0; i < postedCheckBoxes.length; i++) {
		postedArray.push(postedCheckBoxes[i].value);

		if (postedCheckBoxes[i].value == 'Last 7 days') {

			const today = new Date();
			const yesterday = new Date(today);

			yesterday.setDate(yesterday.getDate() - 7);

			postedDateArray.push(yesterday);

		}
		if (postedCheckBoxes[i].value == 'Last 15 days') {

			const today = new Date();
			const yesterday = new Date(today);

			yesterday.setDate(yesterday.getDate() - 15);

			postedDateArray.push(yesterday);

		}
		if (postedCheckBoxes[i].value == 'Last 30 days') {

			const today = new Date();
			const yesterday = new Date(today);

			yesterday.setDate(yesterday.getDate() - 30);

			postedDateArray.push(yesterday);
		}
	}

	var minDate = new Date(Math.min.apply(null, postedDateArray));

	var docArray = []
	var docCheckBoxes = document.querySelectorAll('input[name=docfiltercheck]:checked')

	for (var i = 0; i < docCheckBoxes.length; i++) {
		docArray.push(docCheckBoxes[i].value);
	}

	var arr = json;

	var ACT = actArray; /*we should pass the actarray here*/

	var PostedDate = postedArray;

	var DocumentType = docArray;

	if (ACT.length > 0 || DocumentType.length > 0 || PostedDate.length > 0) {

		var result = arr.data.filter(function (e) {

			return ACT.includes(e.actName) || new Date(minDate).getTime() <= new Date(e.postedOn).getTime() || DocumentType.includes(e.draftCategory)
		});

		var docs = $();
		$("#listcontent .card").remove();
		if (result.length <= 0) {
			$("h5.text-danger").removeClass("noneClass");
		} else {
			for (var i = 0; i < result.length; i++) {
				filterListing(result);
				docs = docs.add(createDocsList(result[i]));
				$("#listcontent:visible .heightalign").append(docs);
			}
             $("h5.text-danger").addClass("noneClass");
		}
	} else if (ACT.length > 0 || DocumentType.length > 0 && PostedDate.length == 0) {
		var result = arr.data.filter(function (e) {
			return ACT.includes(e.draftName) || DocumentType.includes(e.draftCategory)
		});

		var docs = $();
		$("#listcontent .card").remove();
		if (result.length <= 0) {
			$("h5.text-danger").removeClass("noneClass");
		} else {
			for (var i = 0; i < result.length; i++) {
				filterListing(result);
				docs = docs.add(createDocsList(result[i]));
				$("#listcontent:visible .heightalign").append(docs);
			}
            $("h5.text-danger").addClass("noneClass");
		}
	} else {
		docsListing(json);
		$("h5.text-danger").addClass("noneClass");
	}

}

/* When the user clicks on the button, 
toggle between hiding and showing the dropdown content */
function sortMenuFunction() {
	document.getElementById("sortMenu").classList.toggle("show");
}


$('#sortlink, #sortMenu').mouseenter(function (event) {
	$('#sortMenu').addClass('show');
}).mouseleave(function (event) {
	$('#sortMenu').removeClass('show');
});

/*
$('#sortlink, #sortMenu').mouseleave(function(event){
    $('#sortMenu').removeClass('show');
});*/


function blockSpecialChar(e) {
	var k;
	document.all ? k = e.keyCode : k = e.which;
	return ((k > 64 && k < 91) || (k > 96 && k < 123) || k == 8 || k == 32 || (k >= 48 && k <= 57));
}

// Close the dropdown if the user clicks outside of it
window.onclick = function (event) {
	if (!event.target.matches('.sortIcon')) {
		var dropdowns = document.getElementsByClassName("sortMenu-content");
		var i;
		for (i = 0; i < dropdowns.length; i++) {
			var openDropdown = dropdowns[i];
			if (openDropdown.classList.contains('show')) {
				openDropdown.classList.remove('show');
			}
		}
	}
}
debugger;
/**
 * Prefills the form if user is registered only called for non guest users
 * @param {Object} userDetailsObj The user details obj
 */
  var csrfToken = document.getElementById('csrfToken').value;
const prefillUserData = userDetailsObj => {
  let userType = $("#userType").val();

  if (userType.toLowerCase() === "individual") {
    $("#firstName").val(userDetailsObj.firstName);
    $("#firstName").attr("readonly", "true");
    $("#middleName").val(userDetailsObj.middleName);
    $("#middleName").attr("readonly", "true");
    $("#lastName").val(userDetailsObj.lastName);
    $("#lastName").attr("readonly", "true");

    $("#emailId").val(userDetailsObj.emailId);
    $("#emailId").attr("readonly", "true");
    if((userDetailsObj.mobileNumber)==null||(userDetailsObj.mobileNumber)==undefined||(userDetailsObj.mobileNumber)==""){
            $("#mobileNumber").prop("disabled",false);
            $("#mobileNumber").css("cursor-pointer","cursor");
            }else{
            $("#mobileNumber").prop("disabled",true);
            $("#mobileNumber").css("cursor-pointer","none");
            $("#mobileNumber").val(userDetailsObj.mobileNumber);
            }
    $("#mobileNumber").attr("readonly", "true");
    $("#addressLine1").val(userDetailsObj.addressLine1);
    $("#addressLine1").attr("readonly", "true");
    if($("#addressLine2").length>0)
	{
		//alert("0 vlaue");
		$("#addressLine2").css("color","transparent");
	}
    $("#addressLine2").val(userDetailsObj.addressLine2);
    $("#addressLine2").attr("readonly", "true");

    $("#city").val(userDetailsObj.city);
    $("#city").attr("readonly", "true");
    $("#userArea").val(userDetailsObj.area);
    $("#userArea").attr("readonly", "true");
    $("#userDistrict").val(userDetailsObj.district);
    $("#userDistrict").attr("readonly", "true");
    $("#state_UnionTerritory").val(userDetailsObj.state_UnionTerritory);
    $("#state_UnionTerritory").attr("readonly", "true");

    if (userDetailsObj.country !== "") {
      $("#country").val(userDetailsObj.country);
      $("#country").attr("disabled", "true");
      if (userDetailsObj.country === "India") {
        $("#pinCode").val(userDetailsObj.pinCode);
        $("#pinCode").attr("readonly", "true");
      }
        else{$("#pinCode-error").hide();}
    }

    if (
      userDetailsObj.uniqueIdentityType !== "" &&
      userDetailsObj.uniqueIdentityNo
    ) {
      if (userDetailsObj.uniqueIdentityType.toLowerCase() === "pan") {
        $("#UINType").val("panno");
        $("#UINType").attr("readonly", "true");
        $("#panno").val(userDetailsObj.uniqueIdentityNo);
        $("#panno").attr("readonly", "true");
      } else if (userDetailsObj.uniqueIdentityType.toLowerCase() === "aadhar") {
        $("#UINType").val("adhaarno");
        $("#UINType").attr("readonly", "true");
        $("#adhaarno").val(userDetailsObj.uniqueIdentityNo);
        $("#adhaarno").attr("readonly", "true");
      } else if (
        userDetailsObj.uniqueIdentityType.toLowerCase() === "passport"
      ) {
        $("#UINType").val("passportno");
        $("#UINType").attr("readonly", "true");
        $("#passportno").val(userDetailsObj.uniqueIdentityNo);
        $("#passportno").attr("readonly", "true");
      } else {
        console.warn("Invalid value for uniqueIdentityType");
      }
    }

    if (userDetailsObj.profession !== "") {
      $("#profession").val(userDetailsObj.profession);
      $("#profession").attr("disabled", "true");
    }
  } else {
    //Only Adding personal Infor for now as clarity is pending for org details
    $("#orgfirstName").val(userDetailsObj.firstName);
    $("#orgfirstName").attr("readonly", "true");
    $("#orgmiddleName").val(userDetailsObj.middleName);
    $("#orgmiddleName").attr("readonly", "true");
    $("#orglastName").val(userDetailsObj.lastName);
    $("#orglastName").attr("readonly", "true");
  }
};

/**
 * Fetches userDetails from econsultation specific getUserDetails servlet
 * @author Jayesh
 * @returns {Object} user details JSON Obj
 */
const getUserDetails = async () => {
  let userDetailsObj = {};
  var userId=getUserId();
  console.log("helloName",userId);
  requestData="userId="+userId;

  await $.ajax({
    url: "/bin/econsultation/getUserDetails",
    type: "POST",
    data: "data=" + encrypt(requestData)+ "&csrfToken=" + encrypt(csrfToken),
    success: function(response) {
      userDetailsObj = response.data;
    }
  });
  return userDetailsObj;
};

$(document).ready(async function() {
  $("#areaDropdown").hide();
  $(
    "#professionalno, #otherText, #indvidualIndustryOfOperation, #panno, #adhaarno, #passportno"
  )
    .parent()
    .hide();
  if ($(".userDetailForm:visible").length > 0) {
    let userType = getUserRole();

    if (userType.toLowerCase() === "individual") {
      $(".individualFields").show();
    } else {
      $(".organisationFields").show();
    }
  }
  // $("#userType.userTypeExistTrigger:visible").trigger("change");

  //   $("#userType").on("change", function() {
  // $(".detail_submit").prop("disabled", false);
  // $(".optionalFields").hide();
  // if (
  //   $(this)
  //     .children("option:selected")
  //     .val() == "individual"
  // )
  //   $(".individualFields").show();
  // else $(".organisationFields").show();

  let userType = getUserRole();

  if (userType === "guest") {
    $("#userType").on("change", () => {
      userType = $("#userType").val();
      $(".individualFields").hide();
      $(".organisationFields").hide();
      if (userType.toLowerCase() === "individual") {
        $(".individualFields").show();
      } else {
        $(".organisationFields").show();
      }
    });
  } else {
    let userDetailsObj = await getUserDetails();

    if (userType.toLowerCase() === "individual") {
      $("#userType").val(userType);
    } else {
      $("#userType").val("Organisation");
    }

    $("#userType").attr("disabled", "true");
    $(".individualFields").hide();
    $(".organisationFields").hide();
    if (userType.toLowerCase() === "individual") {
      $(".individualFields").show();
    } else {
      $(".organisationFields").show();
    }

    prefillUserData(userDetailsObj);
  }

  //   });

  if ($(".hiddenCountry").val() == "IN") {
    $("#country option[data-countrycode='IN']").attr("selected", "selected");
    if ($("#userType").val() == "organisation") {
      $("#orgCountry option[data-countrycode='IN']").attr(
        "selected",
        "selected"
      );
      $("#orgCountry option").attr("disabled", true);
      $("#orgCountry option[data-countrycode='IN']").attr("disabled", false);
    }
    $("#areaDropdown").show();
    $(".userArea").hide();
    $(
      ".userCity, .userState, .userArea, .userDistrict, #pinCode, #orgPinCode"
    ).attr("readonly", true);
    $("#country option").attr("disabled", true);
    $("#country option[data-countrycode='IN']").attr("disabled", false);
  } else if ($(".hiddenCountry").val() == "") {
    $("#country option[value='default']").attr("selected", "selected");
    $("#orgCountry option[value='default']").attr("selected", "selected");
  } else {
    var countrySelected = $(".hiddenCountry").val();
    $("#country option[data-countrycode=" + countrySelected + "]").attr(
      "selected",
      "selected"
    );
    $("#country").trigger("change");
    $("#country option").attr("disabled", true);
    $("#country option[data-countrycode=" + countrySelected + "]").attr(
      "disabled",
      false
    );
    if ($("#userType").val() == "organisation") {
      $("#orgCountry option[data-countrycode=" + countrySelected + "]").attr(
        "selected",
        "selected"
      );
      $("#orgCountry").trigger("change");
      $("#orgCountry option").attr("disabled", true);
      $("#orgCountry option[data-countrycode=" + countrySelected + "]").attr(
        "disabled",
        false
      );
    }
  }

  $("#profession").on("change", function() {
    if ($("#profession option:selected").text() == "Professional") {
      $("#professionalno")
        .parent()
        .show();
      $("#otherText, #indvidualIndustryOfOperation")
        .parent()
        .hide();
    } else if ($("#profession option:selected").text() == "Businessperson") {
      $("#indvidualIndustryOfOperation")
        .parent()
        .show();
      $("#professionalno, #otherText")
        .parent()
        .hide();
    } else if ($("#profession option:selected").text() == "Other") {
      $("#otherText")
        .parent()
        .show();
      $("#professionalno, #indvidualIndustryOfOperation")
        .parent()
        .hide();
    } else
      $("#professionalno, #otherText, #indvidualIndustryOfOperation")
        .parent()
        .hide();
  });

  $("#UINType").on("change", function() {
    if ($("#UINType option:selected").val() == "panno") {
      $("#panno")
        .parent()
        .show();
      $("#passportno, #adhaarno")
        .parent()
        .hide();
    } else if ($("#UINType option:selected").val() == "adhaarno") {
      $("#adhaarno")
        .parent()
        .show();
      $("#passportno, #panno")
        .parent()
        .hide();
    } else if ($("#UINType option:selected").val() == "passportno") {
      $("#passportno")
        .parent()
        .show();
      $("#adhaarno, #panno")
        .parent()
        .hide();
    } else
      $("#adhaarno, #passportno, #panno")
        .parent()
        .hide();
  });

  $("#country").on("change", function() {
    if ($("#country option:selected").val() == "India") {
      $(
        ".userCity:visible, .userState:visible, .userArea:visible, .userDistrict:visible"
      ).attr("readonly", true);

       // alert('abcd');
      $(
        "#city:visible, .userState:visible, .userArea:visible, .userDistrict:visible"
      ).valid();
      $("#areaDropdown").show();
      $("#userArea").hide();
      $(
        ".userCity:visible,.userState:visible, .userDistrict:visible, .userArea, #pinCode"
      ).val("");
      $("#pinCode").attr("maxlength", "6");
    } else {	$("#pinCode-error").hide();
           // alert('lmnop');

      $(
        ".userCity:visible,.userState:visible, .userArea, .userDistrict:visible"
      ).attr("readonly", false);
      $("#areaDropdown").hide();
      $("#userArea").show();
      $(
        ".userCity:visible,.userState:visible, .userDistrict:visible, .userArea, #pinCode"
      ).val("");
      $("#pinCode").attr("maxlength", "10");

    }
  });

  $("#orgCountry").on("change", function() {
    if ($("#orgCountry option:selected").val() == "India") {
      $(".userCity:visible, .userState:visible").attr("readonly", true);
      $("#orgCity:visible, .userState:visible").valid();
      $("#userArea").hide();
      $(".userCity:visible,.userState:visible, #orgPinCode").val("");
      $("#orgPinCode").attr("maxlength", "6");
    } else {
      $(".userCity:visible,.userState:visible").attr("readonly", false);
      $(".userCity:visible,.userState:visible, #orgPinCode").val("");
      $("#orgPinCode").attr("maxlength", "10");
    }
  });

  $(".txtOnly").keypress(function(e) {
    var regex = new RegExp("^[ A-Za-z_@./!)*(<>%?#{}&+-]*$");
    var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
    if (regex.test(str)) {
      return true;
    }

    e.preventDefault();
    return false;
  });

  $(".numberOnly").on("keypress keyup blur", function(e) {
    var key = e.keyCode;
    if (key < 48 || key > 57) {
      e.preventDefault();
    }
  });

  $(document).on("keypress", ".alphanumericOnly", function(e) {
    var regex = new RegExp("[^~^]"); // exclude ^~
    var str = String.fromCharCode(!e.charCode ? e.which : e.charCode);
    if (regex.test(str)) {
      return true;
    }
    e.preventDefault();
    return false;
  });

  $(document).on("cut copy paste", ".blockCopyPaste", function(e) {
    e.preventDefault();
  });

  $('input[name="panno"], input[name="passportno"]').val(function() {
    return this.value.toUpperCase();
  });

  $.validator.addMethod(
    "validatePanNo",
    function(value, element) {
      // allow any non-whitespace characters as the host part
      return (
        this.optional(element) || /[A-Za-z]{5}[0-9]{4}[A-Za-z]{1}$/.test(value)
      );
    },
    "Please enter a valid PAN no."
  );

  $.validator.addMethod(
    "validateEmail",
    function(value, element) {
      // allow any non-whitespace characters as the host part
      return (
        this.optional(element) ||
        /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,4}$/.test(value)
      );
    },
    "Please enter a valid email id."
  );
  $.validator.addMethod(
    "validateMobileNo",
    function(value, element) {
      // allow any non-whitespace characters as the host part
      return this.optional(element) || /^[6-9]\d{9}$/.test(value);
    },
    "Please enter a valid Mobile No."
  );

  $.validator.addMethod(
    "valueNotEquals",
    function(value, element, arg) {
      return arg !== value;
    },
    "Select Industry of Operation"
  );

  $.validator.addMethod(
    "validateAdhaar",
    function(value, element) {
      // allow any non-whitespace characters as the host part
      return (
        this.optional(element) ||
        /^[2-9]{1}[0-9]{3}[0-9]{4}[0-9]{4}$/.test(value)
      );
    },
    "Please enter valid Adhaar No"
  );
  $.validator.addMethod(
    "validatePassport",
    function(value, element) {
      // allow any non-whitespace characters as the host part
      return (
        this.optional(element) ||
        /^[A-PR-WYa-pr-wy][1-9]\d\s?\d{4}[1-9]$/.test(value)
      );
    },
    "Please enter valid Passport No"
  );


 $.validator.addMethod(
    "validatePinNo",

   				 function(value, element) {
    			  // allow any non-whitespace characters as the host part

					//alert($("#country option:selected").val());

           		 return this.optional(element) || /^[0-9]\d{5}$/.test(value);

    },
    "Invalid Pincode."

  );


 // validate the selection of UIN Type Dropdown values

    $.validator.addMethod('checkSelection', function(value){
        return value !== '0';
    });


  $("#guestForm").validate({
    focusInvalid: false,
    invalidHandler: function(form, validator) {
      if (!validator.numberOfInvalids()) return;

      $("html, body").animate(
        {
          scrollTop: $(validator.errorList[0].element).offset().top
        },
        1000
      );
      $(validator.errorList[0].element).focus();
    },
    rules: {
      firstName: {
        required: function(element) {
          return $("#userType option:selected").text() == "Individual";
        },
        maxlength: 35
      },
      lastName: {
        required: function(element) {
          return $("#userType option:selected").text() == "Individual";
        },
        maxlength: 35
      },
      emailId: {
        required: true,
        validateEmail: true,
        maxlength: 50
      },
      mobileNumber: {
        required: function(element) {
          return $("#userType option:selected").text() == "Individual";
        },
        number: true,
        validateMobileNo: true
      },
      addressLine1: {
        required: function(element) {
          return $("#userType option:selected").text() == "Individual";
        },
        maxlength: 100
      },

      UINType: {
        checkSelection: false
      },
      panno: {
       /* required: function(element) {
          return $("#UINType option:selected").val() == "panno"; */
            checkSelection: false

      },
      adhaarno: {
            checkSelection: false

      },
      passportno: {

            checkSelection: false

      },
      country: {
        required: function(element) {
          return $("#userType option:selected").text() == "Individual";
        }
      },
      pinCode: {
        required: function(element) {
          return $("#userType option:selected").text() == "Individual" && $("#country option:selected").val() == "India";

        },
           validatePinNo: true
      },

      state_UnionTerritory: {
        required: function(element) {
          return $("#country option:selected").val() !== "India";
        }
      },
      city: {
        required: function(element) {
          return $("#country option:selected").val() !== "India";
        }
      },
      userArea: {
        required: function(element) {
          return $("#country option:selected").val() !== "India";
        }
      },
      userDistrict: {
        required: function(element) {
          return $("#country option:selected").val() !== "India";
        }
      },
      profession: {
     	checkSelection: true
      },
      professionalno: {
        required: function(element) {
          return $("#profession option:selected").text() == "Professional";
        }
      },
      indvidualIndustryOfOperation: {
        required: function(element) {
          return $("#profession option:selected").text() == "Businessperson";
        },
        valueNotEquals: "default"
      },
      otherText: {
        required: function(element) {
          return $("#profession option:selected").text() == "Other";
        }
      },
      nameOfTheOrganization: {
        required: function(element) {
          return $("#userType option:selected").text() == "Organisation";
        }
      },
      industryOfOperation: {
        required: function(element) {
          return $("#userType option:selected").text() == "Organisation";
        },
        valueNotEquals: "default"
      },
      orgUniqueIdentityNo: {
        required: function(element) {
          return $("#userType option:selected").text() == "Organisation";
        }
      },
      orgEmailId: {
        required: function(element) {
          return $("#userType option:selected").text() == "Organisation";
        },
        validateEmail: true
      },
      orgAddressLine1: {
        required: function(element) {
          return $("#userType option:selected").text() == "Organisation";
        }
      },
      orgCountry: {
        required: function(element) {
          return $("#userType option:selected").text() == "Organisation";
        }
      },
      orgPinCode: {
        required: function(element) {
          return $("#userType option:selected").text() == "Organisation";
        }
      },
      orgState_UnionTerritory: {
        required: function(element) {
          return $("#orgCountry option:selected").val() !== "India";
        }
      },
      orgCity: {
        required: function(element) {
          return $("#orgCountry option:selected").val() !== "India";
        }
      },
      orgfirstName: {
        required: function(element) {
          return $("#userType option:selected").text() == "Organisation";
        }
      },
      orglastName: {
        required: function(element) {
          return $("#userType option:selected").text() == "Organisation";
        }
      },
      orgMobileNumber: {
        required: function(element) {
          return $("#userType option:selected").text() == "Organisation";
        },
        validateMobileNo: true
      }
    },
    messages: {
      firstName: {
        required: "Enter Valid First Name",
        maxlength: "First Name should be less than 35 characters"
      },
      lastName: {
        required: "Enter Valid Last Name",
        maxlength: "Last Name should be less than 35 characters"
      },
      emailId: {
        required: "Enter Valid Email-Id",
        maxlength: "Email Id should be less than 50 characters"
      },
      mobileNumber: {
        required: "Enter Valid Mobile Number"
      },
      addressLine1: {
        required: "Enter Valid Address",
        maxlength: "Address should be less than 100 characters"
      },
      country: {
        required: "Select Country"
      },
      userArea: {
        required: "Enter Area"
      },
      userDistrict: {
        required: "Enter District"
      },
      state_UnionTerritory: {
        required: "Enter State"
      },
      city: {
        required: "Enter City"
      },

      UINType: {
        checkSelection: "Select UIN"
      },
      panno: {
        required: "Enter Valid PAN No"
      },
      adhaarno: {
        required: "Enter Valid ADHAAR No"
      },
      passportno: {
        required: "Enter Valid PASSPORT No"
      },
      pinCode: {
        required: "Enter Pin Code"
      },
      profession: {
        checkSelection: " Select Profession"
      },
      professionalno: {
        required: "Enter Valid Professional No"
      },
      indvidualIndustryOfOperation: {
        required: "Select Industry of Operation"
      },
      otherText: {
        required: "Enter Valid Text"
      },
      nameOfTheOrganization: {
        required: "Enter Valid Organization Name"
      },
      industryOfOperation: {
        required: "Select Industry of Operation"
      },
      orgState_UnionTerritory: {
        required: "Enter Org State"
      },
      orgCity: {
        required: "Enter Org City"
      },
      orgState_UnionTerritory: {
        required: "Select Org State"
      },
      orgUniqueIdentityNo: {
        required: "Enter Valid UIN"
      },
      orgEmailId: {
        required: "Enter Valid Org Email Id"
      },
      orgAddressLine1: {
        required: "Enter Valid Org Address"
      },
      orgPinCode: {
        required: "Enter Pincode"
      },
      orgfirstName: {
        required: "Enter Valid First Name"
      },
      orglastName: {
        required: "Enter Valid Last Name"
      },
      orgMobileNumber: {
        required: "Enter Valid Mobile No"
      }
    },
    errorPlacement: function(error, element) {
      /* if (element.attr("name") == "pinCode" || element.attr("name") == "orgPinCode" ){
                  error.appendTo( element.parent().siblings("span").show());
               }else*/
      error.appendTo(element.siblings("span").show());
    }
  });
});

var csrfToken = window.parent.document.querySelector("#csrfToken").value;
$("#error-pin").hide();
const getUserRole = () => {
    setSSUserDetails();
    var userInfoSeesion = sessionStorage.getItem(ssUserInfoMd5);
    if(userInfoSeesion==null || userInfoSeesion=="" || userInfoSeesion == undefined){
        return "guest";
    }

    let information = JSON.parse(userInfoSeesion);

    return information.userRole;
};

const getUserId = () => {
    setSSUserDetails();
    var userInfoSeesion = sessionStorage.getItem(ssUserInfoMd5);
    if (userInfoSeesion==null || userInfoSeesion=="" || userInfoSeesion == undefined) {
        return "";
    }

    let information = JSON.parse(userInfoSeesion);

    return information.userId;
};


$(document).ready(function () {

    $("#public-notice").removeAttr("style");
	$('#loadingPage1').css("display","none");
    $(".modal-backdrop").css("opacity","0");
    $(".modal-backdrop").hide();

    $(".document-list button").on("click", function () {
        sessionStorage.dashboardSelection = encrypt($(this)
            .parent()
            .siblings("td")
            .text());
        sessionStorage.dashboardType = encrypt($(this)
            .parent()
            .parent()
            .parent()
            .data("heading"));
        var headparam = $(this).attr("id");
        var requestData = "reqData=" + headparam;
        sessionStorage.removeItem("searchSelection");

        $.ajax({
            url: "/bin/listingDocs",
            type: "POST",
            data: "data=" + encrypt(requestData) + "&csrfToken=" + encrypt(csrfToken)
        })

            .done(function (rslt) {
                var jsonData = JSON.parse(rslt);

                const draftIdsToRemove=["J108_D","J106_D","J104_D"]
          jsonData.data=jsonData.data.filter(item=>!draftIdsToRemove.includes(item.draftId))


                if (jsonData.resCode == "200") {
                    sessionStorage.setItem("data",encrypt(JSON.stringify(jsonData)));
                    if (
                        window.location.href.indexOf(
                            "/content/mca/global/en/additional-services/econsultation.html"
                        ) > -1
                    ) {
                        window.location.href =
                            "/content/mca/global/en/additional-services/econsultation/econsultation-listing-page.html";
                    } else {
                        window.location.href =
                            "/content/mca/global/hi/additional-services/econsultation/econsultation-listing-page.html";
                    }
                }
            })

            .fail(function (error) {
            })

            .always(function () { });
    });


    $("#pinCode, #orgPinCode").on("input", function () {

        $("#error-pin").hide();

        if (
            $(this).val().length >= 6 &&
            $("#country option:selected").val() == "India" ||
                $("#orgCountry option:selected").val() == "India") {

            if($("#pinCode").val().length >= 6){
		$("#pinCode-error").hide();
        }
            if($("#country option:selected").val() !== "India"){
			$("#pinCode-error").hide();
        }

            var pinCode = $(this).val();
            var requestData = "pinCode=" + pinCode;
            $.ajax({
                url: "/bin/pinCodeData",
                type: "POST",
                data: "data="+encrypt(requestData)+ "&csrfToken=" + encrypt(csrfToken)

            })




                .done(function (rslt) {
                    var json = JSON.parse(rslt);
                    var dataArray = json.data;

                    console.log("dataArray", dataArray);
                    console.log("rslt", rslt);
                    console.log("rslt1", json.error);
                    $("#error-pin").hide();



                    if (json.error == "Some Error") {
                        $("#error-pin").show();
                        $("#pinCode-error").css("display", "none");
                        console.log("Invalid pin code");
                    }

                    $(".userCity:visible").val(dataArray[0].city);
                    $(".userState:visible").val(dataArray[0].State);
                    $(".userCountry:visible").val(dataArray[0].Country);
                    $(".userArea:visible").val(dataArray[0].Area);
                    $(".userDistrict:visible").val(dataArray[0].District);
                    for (var i = 0; i < dataArray.length; i++) {
                        var o = new Option(dataArray[i].Area, dataArray[i].Area);
                        /// jquerify the DOM object 'o' so we can use the html method
                        $(o).html(dataArray[i].Area);
                        $("#areaDropdown:visible").append(o);
                    }
                })


                .fail(function (error) { });
        } else {
            $(".userCity:visible").val("");
            $(".userState:visible").val("");
            $(".userArea:visible").val("");
            $(".userDistrict:visible").val("");
            $("#areaDropdown").html("");
        }
    });


    $(".detail_submit").on("click", function (e) {

        e.preventDefault();


        $("#mobileOtpError, #emailOtpError").hide();
        var fileContent = new FormData();
        if ($("#guestForm").valid()) {
            $("#profession").removeAttr("disabled");
            $("#country").removeAttr("disabled");
            var userDataArr = $("#guestForm").serializeArray();
            $("#country").attr("disabled", "true");
            var userData = JSON.stringify(serializeFormData(userDataArr));
            sessionStorage.setItem("userData", userData);

            var commentData = sessionStorage.getItem("commentData");

            var userType = $("#userType").val();
            var mobileNo;
            var EmailId;
            var requestType = "diffOTP";
            var templateType = "econsultation";
            var country = $("#country").val();
            console.log("country", country);
            var documentName = $("#docName").val();

            if (userType.toLowerCase() == "individual") {
                mobileNo = $("#mobileNumber").val();
                console.log("mobileNum", mobileNo);
                EmailId = $("#emailId").val();
            } else {
                mobileNo = $("#orgMobileNumber").val();
                EmailId = $("#orgEmailId").val();
            }
            userData = JSON.parse(userData);
            userData["EmailId"] = EmailId;
            userData["mobileNo"] = mobileNo;
            userData["userType"] = userType;
            userData["requestType"] = requestType;
            userData["templateType"] = templateType;
            userData["documentName"] = documentName;
            var docMetadata = JSON.parse($(".document-metadata-object")[0].innerHTML);
            if (sessionStorage.getItem("fileContent") != null) {
                fileContent.append("file", $("#files")[0].files[0]);
            }
            fileContent.append("userId", encrypt(getUserId()));
            fileContent.append("userData", encrypt(JSON.stringify(userData)));
            fileContent.append("commentData", encrypt(commentData));
            fileContent.append("documentMetadata", encrypt(JSON.stringify(docMetadata)));
             fileContent.append("csrfToken", encrypt(csrfToken));
            if(sessionStorage.getItem("DOCDATA")){
                fileContent.append("DOCDATA",sessionStorage.getItem("DOCDATA"));
            }else{

              var dummyDOCdata=  {
                  "activityFileName":"",
                  "attachmentDMSId":"",
                }

                fileContent.append("DOCDATA",JSON.stringify(dummyDOCdata));
            }

            debugger;
            $.ajax({
                url: "/bin/econsultVerifyUser",
                type: "POST",
                enctype: "multipart/form-data",
                data: fileContent,
                processData: false,
                contentType: false
            })

                .done(function (rslt) {
                    if (rslt == "OK") {
                        $("#documentview").hide(100);
                        $(".feedbackContainer").show(600);
                    } else if (rslt == "Override") {
                        $("#commentsConfrimModal").modal("show");
                    } else if (rslt == "OtpSuccess" || rslt == "SmsOtpSuccess" || rslt == "EmailOtpSuccess") {
                        $("#otp").modal("show");
                startTimer("mobileResend");
                startTimer("emailResend");
                    } else if (rslt == "OtpError" || rslt == "") {
                        $("#otpErrModal").modal("show");
                    } else if (rslt == "error") {
                        window.location.href = "/content/mca/global/en/error-page.html";
                    } else if (rslt == "200") {
                        $("#otp").modal("hide");
                        $("#documentview").hide(100);
                        $(".feedbackContainer").show(600);
                        $(".feedbackContainer").animate(
                            {
                                scrollTop: $(".feedback-component").offset().top
                            },
                            500
                        );
                    } else {
                        window.location.href = "/content/mca/global/en/error-page.html";
                    }
                })

                .fail(function (error) {
                })

                .always(function () { });
        }
    });

function startTimer(timerid) {
    var timer = 60;
    var timerval = $("#" + timerid);
    timerval.attr("disabled", true);
    var interval = setInterval(function () {
        timerval.text("00:"+ timer);
        timer--;
        if (timer < 0) {
            clearInterval(interval);
            timerval.text("Resend");
            timerval.removeAttr("disabled");
        }
    }, 1000);
}

$(document).on("click", "#mobileResend", function (e) {
    e.preventDefault();
    // Add your resend OTP logic here

});

$(document).on("click", "#emailResend", function (e) {
    e.preventDefault();
    // Add your resend OTP logic here

});

if($("#country option:selected").val() != "India"){
			$("#pinCode-error").hide();
        }




    function serializeFormData(formDataArr) {
        var formDataObj = {};

        $.each(formDataArr, function () {
            if (formDataObj[this.name]) {
                if (!formDataObj[this.name].push) {
                    formDataObj[this.name] = [formDataObj[this.name]];
                }
                formDataObj[this.name].push(this.value || "");
            } else {
                formDataObj[this.name] = this.value || "";
            }
        });

        return formDataObj;
    }

    $("#mobileResend").on("click", function (e) {
        e.preventDefault();
        startTimer("mobileResend");
        $("#mobileOtp").val("");
        var userType = $("#userType").val();
        var mobileNo;
        var EmailId;
        var requestType = "onlyMobileOTP";
        var templateType = "econsultation";
        var documentName = $("#docName").val();
        var country = $("#country").val();

        if (userType.toLowerCase() == "individual") {
            mobileNo = $("#mobileNumber").val();
            EmailId = $("#emailId").val();
        } else {
            mobileNo = $("#orgMobileNumber").val();
            EmailId = $("#orgEmailId").val();
        }

        let tempData =
            "mobileNo=" +
            mobileNo +
            "&EmailId=" +
            "" +
            "&requestType=" +
            requestType +
            "&templateType=" +
            templateType +
            "&documentName=" +
            documentName +
            "&countryName=" +
            country;
        $.ajax({
            url: "/bin/sendOTP",
            type: "POST",
            data: `data=${encrypt(tempData)}`
        })

            .done(function (rslt) {
                let jsonRes = decodeURIComponent(rslt);
                jsonRes = decrypt(jsonRes);
                jsonRes = JSON.parse(jsonRes);
                if (jsonRes.message == "error") {
                    $("#otp").modal("hide");
                    $("#otpErrModal").modal("show");
                }
            })

            .fail(function (error) { })

            .always(function () { });
        disableButton("mobileResend");
    });

    $("#emailResend").on("click", function (e) {
        e.preventDefault();
        $("#mailOtp").val("");
        startTimer("emailResend");
        var userType = $("#userType").val();
        var mobileNo;
        var EmailId;
        var requestType = "onlyEmailOTP";
        var templateType = "econsultation";
        var documentName = $("#docName").val();

        if (userType.toLowerCase() == "individual") {
            mobileNo = $("#mobileNumber").val();
            EmailId = $("#emailId").val();
        } else {
            mobileNo = $("#orgMobileNumber").val();
            EmailId = $("#orgEmailId").val();
        }
        let tempData =
            "mobileNo=" +
            "" +
            "&EmailId=" +
            EmailId +
            "&requestType=" +
            requestType +
            "&templateType=" +
            templateType +
            "&documentName=" +
            documentName;
        $.ajax({
            url: "/bin/sendOTP",
            type: "POST",
            data: `data=${encrypt(tempData)}`
        })

            .done(function (rslt) {
                let jsonRes = decodeURIComponent(rslt);
                jsonRes = decrypt(jsonRes);
                jsonRes = JSON.parse(jsonRes);
                if (jsonRes.message == "error") {
                    $("#otp").modal("hide");
                    $("#otpErrModal").modal("show");
                }
            })

            .fail(function (error) { })

            .always(function () { });
        disableButton("emailResend");
    });

    debugger;
	$("#commentsConfrimModalYes").on("click", function () {
        var userType = $("#userType").val();
        var mobileNo;
        var EmailId;
        var requestType = "diffOTP";
        var templateType = "econsultation";
        var documentName = $("#docName").val();
        var country = $("#country").val();

        if (userType.toLowerCase() == "individual") {
            mobileNo = $("#mobileNumber").val();
            EmailId = $("#emailId").val();
        } else {
            mobileNo = $("#orgMobileNumber").val();
            EmailId = $("#orgEmailId").val();
        }
        let tempData =
            "mobileNo=" +
            mobileNo +
            "&EmailId=" +
            EmailId +
            "&requestType=" +
            requestType +
            "&templateType=" +
            templateType +
            "&documentName=" +
            documentName +
            "&countryName=" +
            country;
        $.ajax({
            url: "/bin/sendOTP",
            type: "POST",
            data: `data=${encrypt(tempData)}`
        })

            .done(function (rslt) {
                let jsonRes = decodeURIComponent(rslt);
                jsonRes = decrypt(jsonRes);
                jsonRes = JSON.parse(jsonRes);
                if (jsonRes.message == "success") {
                    $("#commentsConfrimModal").modal("hide");
                    $("#otp").modal("show");
                    disableButton("mobileResend");
                    disableButton("emailResend");
                } else if (jsonRes.message == "error") {
                    $("#commentsConfrimModal").modal("hide");
                    $("#otpErrModal").modal("show");
                }
            })

            .fail(function (error) { })

            .always(function () { });
    });



    $("#commentsConfrimModalNo").on("click", function () {
        $("#commentsConfrimModal").modal("hide");
        window.location.href =
            "/content/mca/global/en/additional-services/econsultation/econsultation-listing-page.html";
    });

    $("#otpCancel").on("click", function () {
        $("#mailOtp").val("");
        $("#mobileOtp").val("");
        $("#otp").modal("hide");
    });
    $("#otpSubmit").on("click", function () {
        $("#emailOtpError").hide();
        $("#mobileOtpError").hide();

        var emailOtp = $("#mailOtp").val();
        var mobileOtp = $("#mobileOtp").val();
        var templateType = "econsultation";
        var countryName = $("#country").val();
        var userType = $("#userType").val();
        var mobileNo;
        var EmailId;
        var requestType;

        if (userType.toLowerCase() == "individual") {
            mobileNo = $("#mobileNumber").val();
            EmailId = $("#emailId").val();
        } else {
            mobileNo = $("#orgMobileNumber").val();
            EmailId = $("#orgEmailId").val();
        }

        if (
            $("#mailOtp")
                .val()
                .trim() == "" &&
            $("#mobileOtp")
                .val()
                .trim() == ""
        ) {
            $("#emailOtpError")
                .text("Please enter the OTP")
                .show();
            $("#mobileOtpError")
                .text("Please enter the OTP")
                .show();
        } else if (
            $("#mailOtp")
                .val()
                .trim() == ""
        ) {
            $("#emailOtpError")
                .text("Please enter the OTP")
                .show();
        } else if (
            $("#mobileOtp")
                .val()
                .trim() == ""
        ) {
            $("#mobileOtpError")
                .text("Please enter the OTP")
                .show();
        } else if ($("#mobileOtp").is(":disabled")) {
            requestType = "onlyEmailOTP";
            verifyEconOtp(mobileNo, EmailId, requestType, emailOtp, mobileOtp, templateType, countryName);
        } else if ($("#mailOtp").is(":disabled")) {
            requestType = "onlyMobileOTP";
            verifyEconOtp(mobileNo, EmailId, requestType, emailOtp, mobileOtp, templateType, countryName);
        } else {
            requestType = "diffOTP";
            verifyEconOtp(mobileNo, EmailId, requestType, emailOtp, mobileOtp, templateType, countryName);
        }
    });

$("#mobileOtp").keyup(function(){
$("#mobileOtpError").text("");
});

$("#mailOtp").keyup("click", function(){
$("#emailOtpError").text("");
});
    $("#verifymobileotp").on("click", function () {
    debugger;
            $("#mobileOtpError").hide();
            $("#mobileOtp").prop("disabled", true);
            var mobileOtp = $("#mobileOtp").val();
            var templateType = "econsultation";
            var countryName = $("#country").val();
            var userType = $("#userType").val();
            var mobileNo;
            var requestType;

            if (userType.toLowerCase() == "individual") {
                mobileNo = $("#mobileNumber").val();

            } else {
                mobileNo = $("#orgMobileNumber").val();

            }

            if ($("#mobileOtp")
                .val()
                .trim() == ""
            ) {
             $("#mobileOtp").prop("disabled", false);
                $("#mobileOtpError")
                    .text("Please enter the OTP")
                    .show();
            }else if ($("#mobileOtp").is(":disabled")) {
                requestType = "onlyMobileOTP";
                mobileverifyEconOtp(mobileNo, requestType, mobileOtp, templateType, countryName);
           }
        });
        // Main function for mobile OTP
        function mobileverifyEconOtp(mobileNo, requestType, mobileOtp, templateType, countryName) {
        let tempdata =
            "mobileNo=" +
            mobileNo +
            "&EmailId=" +
                    "" +
           "&requestType=" +
            requestType +
            "&emailOtp=" +
                    "" +
           "&mobileOtp=" +
            mobileOtp +
            "&templateType=" +
            templateType +
            "&countryName=" +
            country;
        console.log("tempdata in verifyServlet", tempdata);
        $.ajax({
            url: "/bin/verifyOTP",
            type: "POST",

            data: "data=" + encrypt(tempdata)
        })
            .done(function (rslt) {
                let jsonRslt = decodeURIComponent(rslt);
                jsonRslt = decrypt(jsonRslt);
                jsonRslt = JSON.parse(jsonRslt);

                //hiding error msgs and enabling otp fields
                $("#mobileOtp").removeAttr("disabled");

                $("#mobileOtpError").hide();


                if (jsonRslt.message == "Mobile Otp Error") {

                    $("#mobileOtpError")
                        .text("Please enter the correct OTP")
                        .show();
                } else if (jsonRslt.message == "error") {
                    $("#mobileOtpError")
                        .text("Please enter the correct OTP")
                        .show();
                        } else if (jsonRslt.message == "success") {
                        debugger;

                            $("#successmsg").show().html("Mobile OTP verified Successfully.");
                            $("#mobileOtp").prop("disabled",true);
                            $("#verifymobileotp").hide();
                            $("#mobileResend").hide();
                            if($("#successmsg").html() == "Mobile OTP verified Successfully." && ($("#successmsg1").html() == "Email OTP verified Successfully.")){
                            $("#otpSubmit").show();
                            }else{
                            $("#otpSubmit").hide();
                            }
                            var fileContent = new FormData();
                            var commentData = sessionStorage.getItem("commentData");
                            $("#userType").removeAttr("disabled"); //removing temp so that it gets added in serializeArr call
                            $("#profession").removeAttr("disabled");
                            $("#country").removeAttr("disabled");
                            var userDataArr = $("#guestForm").serializeArray();
                            $("#country").attr("disabled", "true");
                            $("#profession").attr("disabled", "true");
                            $("#userType").attr("disabled", "true");
                            var userData = JSON.stringify(serializeFormData(userDataArr));
                            userData = JSON.parse(userData);

                            var docMetadata = JSON.parse(
                                $(".document-metadata-object")[0].innerHTML
                            );
                            if (sessionStorage.getItem("fileContent") != null) {
                                fileContent.append("file", $("#files")[0].files[0]);
                            }
                            debugger;
                            fileContent.append("userData", encrypt(JSON.stringify(userData)));
                           	fileContent.append("commentData", encrypt(commentData));
                        	fileContent.append("documentMetadata", encrypt(JSON.stringify(docMetadata)));
                     		fileContent.append("userId", encrypt(getUserId()));
                     		fileContent.append("csrfToken", encrypt(csrfToken));
                            if(sessionStorage.getItem("DOCDATA")){
                        		fileContent.append("DOCDATA",sessionStorage.getItem("DOCDATA"));
                    		}else{

                      			var dummyDOCdata=  {
                          				"activityFileName":"",
                          				"attachmentDMSId":"",
                        			}

                        		fileContent.append("DOCDATA",JSON.stringify(dummyDOCdata));
                    		}
                            console.log("userData= "+userData+" commentData= "+commentData+" documentMetaData= "+docMetadata);

        					debugger;
                            $.ajax({
                                url: "/bin/econsultSubmit",
                                type: "POST",
                                enctype: "multipart/form-data",
                                data: fileContent,
                                processData: false,
                                contentType: false
                            })

                                .done(function (rslt) {
                                    if (rslt == "200") {

                                    } else {
                                        window.location.href = "/content/mca/global/en/error-page.html";
                                    }
                                })

                                .fail(function (error) {
                                    window.location.href = "/content/mca/global/en/error-page.html";
                                })

                                .always(function () { });
                        }
                    })

                    .fail(function (error) {

                    })

                    .always(function () { });
            }


    $("#verifymailotp").on("click", function () {
    debugger;
            $("#emailOtpError").hide();
            $("#mailOtp").prop("disabled",true);
            var emailOtp = $("#mailOtp").val();

            var templateType = "econsultation";
            var countryName = $("#country").val();
            var userType = $("#userType").val();

            var EmailId;
            var requestType;

            if (userType.toLowerCase() == "individual") {
                EmailId = $("#emailId").val();
            } else {
                EmailId = $("#orgEmailId").val();
            }

            if (
                $("#mailOtp")
                    .val()
                    .trim() == ""
            ) {
            $("#mailOtp").prop("disabled", false);
                $("#emailOtpError")
                    .text("Please enter the OTP")
                    .show();
            } else if ($("#mailOtp").is(":disabled")) {
                requestType = "onlyEmailOTP";
                emailverifyEconOtp( EmailId, requestType, emailOtp, templateType, countryName);
            }
        });
        //Main function for Email OTP
           function emailverifyEconOtp(EmailId, requestType, emailOtp,templateType, countryName) {
                let tempdata =
                    "mobileNo=" +
                    "" +
                    "&EmailId=" +
                    EmailId +
                    "&requestType=" +
                    requestType +
                    "&emailOtp=" +
                    emailOtp +
                    "&mobileOtp=" +
                    "" +
                    "&templateType=" +
                    templateType +
                    "&countryName=" +
                    country;
                console.log("tempdata in verifyServlet", tempdata);
                $.ajax({
                    url: "/bin/verifyOTP",
                    type: "POST",

                    data: "data=" + encrypt(tempdata)
                })
                    .done(function (rslt) {
                        let jsonRslt = decodeURIComponent(rslt);
                        jsonRslt = decrypt(jsonRslt);
                        jsonRslt = JSON.parse(jsonRslt);

                        //hiding error msgs and enabling otp fields

                        $("#mailOtp").removeAttr("disabled");

                        $("#emailOtpError").hide();

                        if (jsonRslt.message == "Email Otp Error") {

                            $("#emailOtpError")
                        .text("Please enter the correct OTP")
                        .show();
                        }  else if (jsonRslt.message == "error") {

                    $("#emailOtpError")
                        .text("Please enter the correct OTP")
                        .show();
                } else if (jsonRslt.message == "success") {

                            $("#successmsg1").show().html("Email OTP verified Successfully.")
                            $("#mailOtp").prop("disabled",true);
                            $("#verifymailotp").hide();
                            $("#emailResend").hide();
                            if($("#successmsg").html() == "Mobile OTP verified Successfully." && ($("#successmsg1").html() == "Email OTP verified Successfully.")){
                            $("#otpSubmit").show();
                            }else{
                             $("#otpSubmit").hide();
                             }
                        var fileContent = new FormData();
                        var commentData = sessionStorage.getItem("commentData");
                        $("#userType").removeAttr("disabled"); //removing temp so that it gets added in serializeArr call
                        $("#profession").removeAttr("disabled");
                        $("#country").removeAttr("disabled");
                        var userDataArr = $("#guestForm").serializeArray();
                        $("#country").attr("disabled", "true");
                        $("#profession").attr("disabled", "true");
                        $("#userType").attr("disabled", "true");
                        var userData = JSON.stringify(serializeFormData(userDataArr));
                        userData = JSON.parse(userData);

                            var docMetadata = JSON.parse(
                                $(".document-metadata-object")[0].innerHTML
                            );
                            if (sessionStorage.getItem("fileContent") != null) {
                                fileContent.append("file", $("#files")[0].files[0]);
                            }
                            debugger;
                            fileContent.append("userData", encrypt(JSON.stringify(userData)));
                           	fileContent.append("commentData", encrypt(commentData));
                        	fileContent.append("documentMetadata", encrypt(JSON.stringify(docMetadata)));
                     		fileContent.append("userId", encrypt(getUserId()));
                     		fileContent.append("csrfToken", encrypt(csrfToken));
                            if(sessionStorage.getItem("DOCDATA")){
                        		fileContent.append("DOCDATA",sessionStorage.getItem("DOCDATA"));
                    		}else{

                      			var dummyDOCdata=  {
                          				"activityFileName":"",
                          				"attachmentDMSId":"",
                        			}

                        		fileContent.append("DOCDATA",JSON.stringify(dummyDOCdata));
                    		}
                            console.log("userData= "+userData+" commentData= "+commentData+" documentMetaData= "+docMetadata);

        					debugger;
                            $.ajax({
                                url: "/bin/econsultSubmit",
                                type: "POST",
                                enctype: "multipart/form-data",
                                data: fileContent,
                                processData: false,
                                contentType: false
                            })

                                .done(function (rslt) {
                                    if (rslt == "200") {


                                    } else {
                                        window.location.href = "/content/mca/global/en/error-page.html";
                                    }
                                })

                                .fail(function (error) {
                                    window.location.href = "/content/mca/global/en/error-page.html";
                                })

                                .always(function () { });
                        }
                    })

                    .fail(function (error) {

                    })

                    .always(function () { });
            }
   //Main function
   function verifyEconOtp(mobileNo, EmailId, requestType, emailOtp, mobileOtp, templateType, countryName) {
        let tempdata =
            "mobileNo=" +
            mobileNo +
            "&EmailId=" +
            EmailId +
            "&requestType=" +
            requestType +
            "&emailOtp=" +
            emailOtp +
            "&mobileOtp=" +
            mobileOtp +
            "&templateType=" +
            templateType +
            "&countryName=" +
            country;
        console.log("tempdata in verifyServlet", tempdata);

                $("#mobileOtp").removeAttr("disabled");
                $("#mailOtp").removeAttr("disabled");
                $("#mobileOtpError").hide();
                $("#emailOtpError").hide();
                    var fileContent = new FormData();
                    var commentData = sessionStorage.getItem("commentData");
                    $("#userType").removeAttr("disabled"); //removing temp so that it gets added in serializeArr call
                    $("#profession").removeAttr("disabled");
                    $("#country").removeAttr("disabled");
                    var userDataArr = $("#guestForm").serializeArray();
                    $("#country").attr("disabled", "true");
                    $("#profession").attr("disabled", "true");
                    $("#userType").attr("disabled", "true");
                    var userData = JSON.stringify(serializeFormData(userDataArr));
                    userData = JSON.parse(userData);

                    var docMetadata = JSON.parse(
                        $(".document-metadata-object")[0].innerHTML
                    );
                    if (sessionStorage.getItem("fileContent") != null) {
                        fileContent.append("file", $("#files")[0].files[0]);
                    }
                    debugger;
                    fileContent.append("userData", encrypt(JSON.stringify(userData)));
                   	fileContent.append("commentData", encrypt(commentData));
                	fileContent.append("documentMetadata", encrypt(JSON.stringify(docMetadata)));
             		fileContent.append("userId", encrypt(getUserId()));
             		fileContent.append("csrfToken", encrypt(csrfToken));
                    if(sessionStorage.getItem("DOCDATA")){
                		fileContent.append("DOCDATA",sessionStorage.getItem("DOCDATA"));
            		}else{

              			var dummyDOCdata=  {
                  				"activityFileName":"",
                  				"attachmentDMSId":"",
                			}

                		fileContent.append("DOCDATA",JSON.stringify(dummyDOCdata));
            		}
                    console.log("userData= "+userData+" commentData= "+commentData+" documentMetaData= "+docMetadata);
					debugger;
                    $.ajax({
                        url: "/bin/econsultSubmit",
                        type: "POST",
                        enctype: "multipart/form-data",
                        data: fileContent,
                        processData: false,
                        contentType: false
                    })

                        .done(function (rslt) {
                            if (rslt == "200") {
                                $("#otp").modal("hide");
                                $("#documentview").hide(100);
                                $(".feedbackContainer").show(600);
                                $(".feedbackContainer").animate(
                                    {
                                        scrollTop: $(".feedback-component").offset().top
                                    },
                                    500
                                );
                            } else {
                                window.location.href = "/content/mca/global/en/error-page.html";
                            }
                        })

    }

    $(".imgSearchIcon").on("click", function () {
        if ($(".searchbar #searchbox").val().length > 2) {
            var searchText = $(".searchbar #searchbox").val();
            // program to replace a character of a strin
            searchText = searchText.replace("+", "%2B");
            sessionStorage.searchSelection = $(".searchbar #searchbox").val();
            var searchRadio = $(".e-refineSearch input[type='radio']:checked")
                .siblings("label")
                .text();
            var requestData =
                "searchText=" + searchText + "&searchRadio=" + searchRadio;
            $(".searchWrapper input[type='search']").val("");

            $.ajax({
                url: "/bin/searchresult",
                type: "POST",
                data: "data="+encrypt(requestData)+ "&csrfToken=" + encrypt(csrfToken)
            })

                .done(function (rslt) {
                    var jsonData = JSON.parse(rslt);
                    if (jsonData.resCode == "200") {
                        sessionStorage.searchData = encrypt(JSON.stringify(
                            jsonData.listingResultData
                        ));
                        if (window.location.href.indexOf("/content/mca/global/en/") > -1) {
                            window.location.href =
                                "/content/mca/global/en/additional-services/econsultation/econsultation-search-page.html";
                        } else {
                            window.location.href =
                                "/content/mca/global/hi/additional-services/econsultation/econsultation-search-page.html";
                        }
                    } else {
                        window.location.href = "/content/mca/global/en/error-page.html";
                    }
                })

                .fail(function (error) {
                })

                .always(function () { });
        } else {
            $("#searchErrModal").modal("show");
        }
    });

    $(".searchApply").on("click", function () {
        if ($(".searchbar #searchbox").val().length > 2) {
            var searchText = $(".searchbar #searchbox").val();
            var searchRadio = $(".e-refineSearch input[type='radio']:checked")
                .siblings("label")
                .text();
            sessionStorage.searchSelection = $(".searchbar #searchbox").val();
            var requestData =
                "searchText=" + searchText + "&searchRadio=" + searchRadio;

            $.ajax({
                url: "/bin/searchresult",
                type: "POST",
                data: "data="+encrypt(requestData)+ "&csrfToken=" + encrypt(csrfToken)
            })

                .done(function (rslt) {
                    var jsonData = JSON.parse(rslt);
                    if (jsonData.resCode == "200") {
                        sessionStorage.searchData = JSON.stringify(
                            jsonData.listingResultData
                        );
                        if (window.location.href.indexOf("/content/mca/global/en/") > -1) {
                            window.location.href =
                                "/content/mca/global/en/additional-services/econsultation/econsultation-search-page.html";
                        } else {
                            window.location.href =
                                "/content/mca/global/hi/additional-services/econsultation/econsultation-search-page.html";
                        }
                    } else {
                        window.location.href = "/content/mca/global/en/error-page.html";
                    }
                })

                .fail(function (error) {
                    window.location.href = "/content/mca/global/en/error-page.html";
                })

                .always(function () { });
        } else {
            $("#searchErrModal").modal("show");
        }
    });

    $(document).on("click", ".docsButtonClick", function (e) {
        e.preventDefault();

        $("#loadingPage").addClass("guideServiceLoading");

        sessionStorage.removeItem("commentData");
        var draftCodeId = $(this)
            .parents(".card-body")
            .find(".draftId")
            .text();
        let userId = getUserId();
        var ipdata = "inputData=" + draftCodeId + "&userId=" + userId;
        sessionStorage.setItem("draftId", draftCodeId);
        document.cookie = "draftCode=" + draftCodeId + ";path=/";
        $.ajax({
            url: "/bin/econsultation/documentMetadata",
            type: "POST",
            data: "data=" + encrypt(ipdata)+ "&csrfToken=" + encrypt(csrfToken)
        })

            .done(function (rslt) {

                $("#loadingPage").removeClass("guideServiceLoading");

                var jsonData = JSON.parse(rslt);
                if (jsonData.resCode == "200") {
                    if (jsonData.hasOwnProperty("commentData")) {
                        sessionStorage.setItem(
                            "commentData",
                            JSON.stringify(jsonData.commentData)
                        );
                    }
                    if (jsonData.hasOwnProperty("dmsDraftLink")) {
                        document.cookie =
                            "dmsdraftLink=" + jsonData.dmsDraftLink + ";path=/";
                    }
                    if (
                        window.location.href.indexOf(
                            "/content/mca/global/en/additional-services/econsultation/econsultation-listing-page.html"
                        ) > -1
                    ) {
                        window.location.href =
                            "/content/mca/global/en/additional-services/econsultation/econsultation-documents-page.html";
                    } else if (
                        window.location.href.indexOf(
                            "/content/mca/global/en/additional-services/econsultation/econsultation-search-page.html"
                        ) > -1
                    ) {
                        window.location.href =
                            "/content/mca/global/en/additional-services/econsultation/econsultation-documents-page.html";
                    } else if (
                        window.location.href.indexOf(
                            "/content/mca/global/hi/additional-services/econsultation/econsultation-search-page.html"
                        ) > -1
                    ) {
                        window.location.href =
                            "/content/mca/global/hi/additional-services/econsultation/econsultation-documents-page.html";
                    } else {
                        window.location.href =
                            "/content/mca/global/hi/additional-services/econsultation/econsultation-documents-page.html";
                    }
                }
            })

            .fail(function (error) {

            })

            .always(function () { });
    });

    /*----------------Feedback submit slide------------------*/

    $(".comment-box").hide();
    var indexcount = 0;
    for (i = 0; i < 4; i++) {
        var rating = $(".stars");
        rating
            .find("img:first")
            .clone()
            .appendTo(rating);
    }

    $(".stars img").click(function () {
        var indexFeedback = $(this).index()+1;
        $(".cntbtn").prop("disabled", false);
        indexCount = indexFeedback;
        if ($(this).attr("src") == "/content/dam/mca/star-line.svg") {
            $(".stars")
                .children()
                .slice(0, indexFeedback)
                .attr("src", "/content/dam/mca/star-fill.svg");
        } else {
            $(".stars")
                .children()
                .slice(indexFeedback)
                .attr("src", "/content/dam/mca/star-line.svg");
        }
        /* comment box code */
        if (indexFeedback <= 5) {
            $(".comment-box").show();
        } else {
            $(".comment-box").hide();
        }
    });
    /*for continue button */
    $(".cntbtn").click(function () {
        var commentText = $(".comment-area").val();
        var userData = sessionStorage.getItem("userData");
        var draftIDFeedback = $("#docId").val();

        userData = JSON.parse(userData);

        userData["commentText"] = commentText;
        userData["draftIDFeedback"] = draftIDFeedback;
		var reqdata = JSON.stringify(userData);

        $.ajax({
            type: "POST",
            url: "/bin/feedbackData",
            data: "data="+encrypt(reqdata)+ "&csrfToken=" + encrypt(csrfToken),
            async: false,
            success: function (data) {
                window.location.href = "/content/mca/global/en/additional-services/econsultation.html";
            },
            error: function (e) { }
        });

    });
    $(".skipbtn").click(function () {
        window.location.href = "/content/mca/global/en/additional-services/econsultation.html";
    });

    /*----------------BookMark List for Registered User------------------*/

    $(".bookmarks-list").click(function (e) {
        e.preventDefault();
        var requestData = "userId=";

        $.ajax({
            type: "POST",

            url: "/bin/fetchBookmarkData",

            data: "data="+encrypt(requestData)+ "&csrfToken=" + encrypt(csrfToken),

            dataType: "text",

            async: false,

            success: function (response) {
                var bookmarkList = response;

                $("#bookmarklinksid").html("");

                bookmarkList.forEach(function (bookmarkListItem) {
                    bookmarkListItem.forEach(function (bookmark) {
                        var bookmarkElm = document.createElement("a");

                        bookmarkElm.setAttribute("href", "#");

                        bookmarkElm.className = bookmark.root;
                        bookmarkElm.id = bookmark.draftId;

                        var bookmarkElmText = document.createTextNode(bookmark.draftLink);

                        bookmarkElm.appendChild(bookmarkElmText);

                        var bookmarkElmImg = document.createElement("img");

                        bookmarkElmImg.className = "p1-2";

                        bookmarkElmImg.setAttribute(
                            "src",
                            "/content/dam/mca_icons/external-link-line (2).svg"
                        );

                        bookmarkElm.appendChild(bookmarkElmImg);
                        var bookmarkElmval = encrypt(bookmarkElm);
                        $(".bookmarklinks").append(decrypt(decodeURIComponent(bookmarkElmval)));
                    });
                });
            },

            error: function (e) {
                alert("error");
            }
        });
    });
});

$(document).on("click", "#bookmarklinksid a", function (e) {
    var bookmarkId = $(event.target).attr("class");
    var sectionId = $(event.target).attr("id");
    var bookmarkLink = $(event.target).text();
    sessionStorage.removeItem("commentData");
    sessionStorage.setItem("sectionId", sectionId);
    sessionStorage.setItem("bookmarkLink", bookmarkLink);
    document.cookie = "draftCode=" + bookmarkId + ";path=/";

    let userId = getUserId();
    var ipdata =
        "inputData=" +
        bookmarkId +
        "&bookmarkSectionId=" +
        sectionId +
        "&userId=" +
        userId;
    $("#bookmarlistModal").modal("hide");
    $.ajax({
        url: "/bin/econsultation/documentMetadata",
        type: "POST",
        data: "data=" + encrypt(ipdata)+ "&csrfToken=" + encrypt(csrfToken)
    })

        .done(function (rslt) {
            var jsonData = JSON.parse(rslt);
            if (jsonData.resCode == "200") {
                if (jsonData.hasOwnProperty("commentData")) {
                    sessionStorage.setItem(
                        "commentData",
                        JSON.stringify(jsonData.commentData)
                    );
                }
                if (jsonData.hasOwnProperty("dmsDraftLink")) {
                    document.cookie = "dmsdraftLink=" + jsonData.dmsDraftLink + ";path=/";
                }
                if (jsonData.hasOwnProperty("bookmarkSectionName")) {
                    sessionStorage.setItem(
                        "bookmarkSectionName",
                        jsonData.bookmarkSectionName
                    );
                }
                if (window.location.href.indexOf("/content/mca/global/en/") > -1) {
                    window.location.href =
                        "/content/mca/global/en/additional-services/econsultation/econsultation-documents-page.html";
                } else {
                    window.location.href =
                        "/content/mca/global/hi/additional-services/econsultation/econsultation-documents-page.html";
                }
            } else {
                window.location.href = "/content/mca/global/en/error-page.html";
            }
        })

        .fail(function (error) {
        })

        .always(function () { });
});

$(".file-options li:first").on("click", function () {
    $(".bookmark-error").hide();
});

function disableButton(btnId) {
    document.getElementById(btnId).disabled = true;
    $("#" + btnId).css(" pointer-events", "none");
    document.getElementById(btnId).style.cursor = "not-allowed";
    setTimeout(function () {
        document.getElementById(btnId).disabled = false;
        $("#" + btnId).css(" pointer-events", "visible");
        document.getElementById(btnId).style.cursor = "pointer";
    }, 100);
}

